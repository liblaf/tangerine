#compdef tangerine

autoload -U is-at-least

_tangerine() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-o+[]:OUTPUT:_default' \
'--output=[]:OUTPUT:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-i[]' \
'--in-place[]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::input:_default' \
":: :_tangerine_commands" \
"*::: :->tangerine" \
&& ret=0
    case $state in
    (tangerine)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:tangerine-command-$line[2]:"
        case $line[2] in
            (completion)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(gen-markdown)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_tangerine__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:tangerine-help-command-$line[1]:"
        case $line[1] in
            (completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(gen-markdown)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_tangerine_commands] )) ||
_tangerine_commands() {
    local commands; commands=(
'completion:' \
'gen-markdown:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'tangerine commands' commands "$@"
}
(( $+functions[_tangerine__completion_commands] )) ||
_tangerine__completion_commands() {
    local commands; commands=()
    _describe -t commands 'tangerine completion commands' commands "$@"
}
(( $+functions[_tangerine__gen-markdown_commands] )) ||
_tangerine__gen-markdown_commands() {
    local commands; commands=()
    _describe -t commands 'tangerine gen-markdown commands' commands "$@"
}
(( $+functions[_tangerine__help_commands] )) ||
_tangerine__help_commands() {
    local commands; commands=(
'completion:' \
'gen-markdown:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'tangerine help commands' commands "$@"
}
(( $+functions[_tangerine__help__completion_commands] )) ||
_tangerine__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'tangerine help completion commands' commands "$@"
}
(( $+functions[_tangerine__help__gen-markdown_commands] )) ||
_tangerine__help__gen-markdown_commands() {
    local commands; commands=()
    _describe -t commands 'tangerine help gen-markdown commands' commands "$@"
}
(( $+functions[_tangerine__help__help_commands] )) ||
_tangerine__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'tangerine help help commands' commands "$@"
}

if [ "$funcstack[1]" = "_tangerine" ]; then
    _tangerine "$@"
else
    compdef _tangerine tangerine
fi
